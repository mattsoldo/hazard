TODO after installing:

- Set up new app at http://getexceptional.com/apps
- Put the right API key in config/exceptional.yml


- Put the right API key in config/new_relic.yml

- Create public/favicon.ico
- Put the production database password in config/database.yml
- Put mail server information in mail.rb
- Put real IP address and git repo URL in deployment files
- Add app to gitosis config
- git remote add origin git@github.com:hazard.git
- git push origin master:refs/heads/master

This application includes:

Design Tools
============
 - Set up for Haml and Sass
- Forms are built using formtastic for added DRYness


 - Compass for visual design
- Uses Erubis and the rails_xs plugin to provide safe HTML

Coding Tools
============
- Authlogic for user authentication, including password resets,
    anonymous_only, authenticated_only, admin_only application helpers
- World's simplest authorization system: manage multiple string roles on users with User#add_role, User#remove_role, User#clear_roles, and User#has_role?
- Date formats: :us, :us_with_time, :short_day, :long_day
- Paperclip for attachment management
- /pages/css_test will show most CSS styles in action
- Searchlogic for magic named scopes and search forms - http://rdoc.info/projects/binarylogic/searchlogic
    attribute_equals, attribute_does_not_equal, attribute_begins_with, attribute_like, attribute_ends_with, attribute_greater_than,
    attribute_null, attribute_blank etc. etc.
- Stringex for extra string functionality
    acts_as_url, String#to_ascii, String#to_html, String#to_url, String#remove_formatting, String.random
- US State application helpers
- will-paginate for pagination
- jQuery and jQueryUI  
  jQuery files are uncompressed, but Jammit will recompress them on deploy. You may want a custom jQueryUI from http://jqueryui.com/download
- Annotate for annotating model, exemplar, and route files
- Carmen to handle state and country selects     
- rake doc:diagram tasks for use with railroad

Database Tools
==============
- Hooked up for MySQL
- foreigner for foreign key support
- admin-data plugin for administrative UI. http://localhost:3000/admin_data will get you to the application's data. On production,
  only admin can view data, no one can edit (modify config/initializers/admin_data.rb to adjust this)
- db-populate for seed data
- bullet to find N+1 queries in development mode (modify config/environments/development.rb to enable)

- script/migrator to quickly move the database to a specific migration
- rake db:size and rake db:tables:size

Deployment Tools
================
- fast_remote_cache strategy for deployment
- rubiadhstrano for deployment recipes
    automatically uses multiple targets, so: cap production deploy for deployment to production
- superdeploy for additional Capistrano tasks. cap -T for full list.
- Jammit for asset packaging


External Services
=================
- Exceptional for error tracking. Go to /pages/kaboom to test after finishing Exceptional setup.
- New Relic for performance tracking

- Health Monitor (http://github.com/blythedunham/health_monitor) is installed for use with a service such as Pingdom

Testing Tools
=============
- Shoulda and Test::Unit for testing
- Mocha for mocking

- Object Daddy for factories
- Generated code is already covered by tests
- parallel-specs for faster testing.
    rake parallel:prepare[2] to set up two test databases (already done)
    rake test:parallel[2] to distribute tests across two cores
    rake -T parallel to see more - RSpec and Cucumber are also supported
- rack-bug for request/response/perf analysis. http://localhost:3000/__rack_bug__/bookmarklet.html to add bookmarklet to browser.
- shmacros for additional Shoulda macros
    should_accept_nested_attributes_for, should_act_as_taggable_on, should_callback, should_delegate, more
- More extra shoulda macros:
    should_have_before_filter, should_have_after_filter
- metric-fu for static code analysis. rake metrics:all, configure in Rakefile
- inaction-mailer is installed for development environment, so mails sent during dev will end up as files in /tmp/sent_mails
  Get rid of all sent mail files with rake mail:clear
- time-warp for forcing time in tests (use pretend_now_is)
- test_benchmark to identify slow tests (in test environment only)
- query-trace to locate source of queries in the log (development only - turn on via config/initializers/query_trace.rb)
- jQuery-Lint to keep your jQuery squeaky-clean  
- Methods to easily create Object Daddy collections (see test_helper.rb)    
- rcov-plugin to easily run tests with rcov
                                                 
Miscellaneous
=============
- rake doc:dnote creates an HTML page of tasks in the doc folder.